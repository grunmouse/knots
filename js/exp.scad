$fn=40;

function vectorLength(v1,v2) = sqrt(
    (v2[0]-v1[0])*(v2[0]-v1[0])+
    (v2[1]-v1[1])*(v2[1]-v1[1])+
    (v2[2]-v1[2])*(v2[2]-v1[2]));

function lookAt(v1, v2) =
    let(v = v2-v1)
    [
       0,
       acos(v[2]/vectorLength(v1,v2)),
       atan2(v[1], v[0])
    ];


module edge(p1,p2)
{
    translate(p1)
    rotate(lookAt(p1,p2))
    cylinder(vectorLength(p1,p2),radius,radius);
}

module point(p){
    translate(p) sphere(radius);
}

radius = 1;
edge([0,0,0],[65,0,0]);
edge([65,0,0],[65,0,-10]);
edge([65,0,-10],[70,0,-10]);
edge([70,0,-10],[70,-20,-10]);
edge([70,-20,-10],[65,-20,-10]);
edge([65,-20,-10],[65,-20,10]);
edge([65,-20,10],[60,-20,10]);
edge([60,-20,10],[60,10,10]);
edge([60,10,10],[55,10,10]);
edge([55,10,10],[55,10,-10]);
edge([55,10,-10],[50,10,-10]);
edge([50,10,-10],[50,-20,-10]);
edge([50,-20,-10],[45,-20,-10]);
edge([45,-20,-10],[45,-20,10]);
edge([45,-20,10],[40,-20,10]);
edge([40,-20,10],[40,10,10]);
edge([40,10,10],[35,10,10]);
edge([35,10,10],[35,10,-10]);
edge([35,10,-10],[30,10,-10]);
edge([30,10,-10],[30,-20,-10]);
edge([30,-20,-10],[25,-20,-10]);
edge([25,-20,-10],[25,-20,10]);
edge([25,-20,10],[20,-20,10]);
edge([20,-20,10],[20,10,10]);
edge([20,10,10],[15,10,10]);
edge([15,10,10],[15,10,-10]);
edge([15,10,-10],[10,10,-10]);
edge([10,10,-10],[10,-10,-10]);
edge([10,-10,-10],[15,-10,-10]);
edge([15,-10,-10],[15,-10,0]);
edge([15,-10,0],[80,-10,0]);
point([0,0,0]);
point([65,0,0]);
point([65,0,-10]);
point([70,0,-10]);
point([70,-20,-10]);
point([65,-20,-10]);
point([65,-20,10]);
point([60,-20,10]);
point([60,10,10]);
point([55,10,10]);
point([55,10,-10]);
point([50,10,-10]);
point([50,-20,-10]);
point([45,-20,-10]);
point([45,-20,10]);
point([40,-20,10]);
point([40,10,10]);
point([35,10,10]);
point([35,10,-10]);
point([30,10,-10]);
point([30,-20,-10]);
point([25,-20,-10]);
point([25,-20,10]);
point([20,-20,10]);
point([20,10,10]);
point([15,10,10]);
point([15,10,-10]);
point([10,10,-10]);
point([10,-10,-10]);
point([15,-10,-10]);
point([15,-10,0]);
point([80,-10,0]);